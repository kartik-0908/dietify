// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  firstName    String
  lastName     String
  phoneNumber  String
  personalInfo PersonalInfo?
  dietChart    DietChart?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model PersonalInfo {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
  age    Int
  height Float // in cm
  weight Float // in kg
  goal   String // e.g., weight loss, muscle gain
}

model DietChart {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  meals     Meal[]
  createdAt DateTime @default(now())
}

model Meal {
  id          String     @id @default(uuid())
  dietChart   DietChart  @relation(fields: [dietChartId], references: [id])
  dietChartId String
  type        MealType // Enum for Breakfast, Lunch, Dinner
  items       MealItem[]
}

model MealItem {
  id       String @id @default(uuid())
  meal     Meal   @relation(fields: [mealId], references: [id])
  mealId   String
  name     String // Food item name
  calories Float // Caloric value
  protein  Float // Protein content (g)
  carbs    Float // Carbohydrates (g)
  fats     Float // Fats (g)
}

enum MealType {
  BREAKFAST
  LUNCH
  DINNER
}
